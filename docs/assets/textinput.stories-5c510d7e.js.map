{"version":3,"file":"textinput.stories-5c510d7e.js","sources":["../../../../packages/components/text-input/src/text-input.tsx","../../../../packages/components/text-input/src/text-input-styles.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  cn,\n  VisiblePasswordIcon,\n  HiddenPasswordIcon,\n  LoadingIcon,\n  ErrorCircleIcon,\n} from \"@shiperist-catppuccin-ui/utilities\";\nimport {\n  TextInputProps,\n  textInputClass,\n  textInputContainerClass,\n  textInputIconSizeClass,\n  textInputLabelAppearanceBorderClass,\n  textInputOverlayClass,\n} from \".\";\n\nexport const TextInput = React.forwardRef<HTMLInputElement, TextInputProps>((props, ref) => {\n  const {\n    leadingElement,\n    trailingElement: originalTrailingElement,\n    appearance = \"outline\",\n    labelStyle = \"default\",\n    errorIcon,\n    required,\n    size = \"medium\",\n    type = \"text\",\n    placeholder,\n    isLoading,\n    disabled,\n    error,\n    caption,\n    label,\n    className = \"\",\n    ...other\n  } = props;\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [inputType, setInputType] = useState(type);\n\n  const containerClass = cn(textInputContainerClass, className);\n  const overlayClass = textInputOverlayClass(size, disabled, error, isInputFocused, appearance);\n  const textInputStyles = textInputClass(disabled, error);\n  const iconSizeClass = textInputIconSizeClass[size] || textInputIconSizeClass.medium;\n  const borderedAppearanceStyle = textInputLabelAppearanceBorderClass(label, labelStyle);\n\n  let trailingElement: React.ReactNode = originalTrailingElement;\n  if (isLoading) {\n    trailingElement = <LoadingIcon className={iconSizeClass} />;\n  } else if (error && errorIcon) {\n    trailingElement = <ErrorCircleIcon className={cn(iconSizeClass, \"stroke-red\")} />;\n  } else if (type === \"password\") {\n    trailingElement = <VisiblePasswordIcon className={iconSizeClass} />;\n  }\n\n  const handleInputFocus = () => {\n    setIsInputFocused(true);\n  };\n\n  const handleInputBlur = () => {\n    setIsInputFocused(false);\n  };\n\n  const handleEye = () => {\n    setIsPasswordVisible(!isPasswordVisible);\n    setInputType(isPasswordVisible ? type : \"text\");\n  };\n\n  return (\n    <div\n      className={containerClass}\n      style={label && label.length > 0 ? { ...other.style, gap: 2 } : undefined}\n      {...other}>\n      <label htmlFor={other.id} className={label && labelStyle === \"border\" ? borderedAppearanceStyle : \"cursor-text\"}>\n        <span className={labelStyle === \"border\" ? \"text-xs\" : \"text-sm\"}>{label}</span>{\" \"}\n        {label && required && <span className=\"text-red\">*</span>}\n      </label>\n      <div className={overlayClass}>\n        {leadingElement && <div className={cn(\"stroke-overlay1\")}>{leadingElement}</div>}\n        <input\n          ref={ref}\n          className={textInputStyles}\n          type={inputType}\n          placeholder={placeholder}\n          disabled={disabled}\n          required={required}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          {...other}></input>\n        {trailingElement && (\n          <div\n            onClick={!disabled && type === \"password\" ? handleEye : undefined}\n            className={cn(\"stroke-overlay1\", {\n              \"cursor-pointer\": type === \"password\",\n              \"cursor-not-allowed\": disabled,\n            })}>\n            {type === \"password\" ? (\n              isPasswordVisible ? (\n                <VisiblePasswordIcon className={iconSizeClass} />\n              ) : (\n                <HiddenPasswordIcon className={iconSizeClass} />\n              )\n            ) : (\n              trailingElement\n            )}\n          </div>\n        )}\n      </div>\n      {caption && (\n        <p\n          className={cn(\"pt-2 text-sm\", {\n            \"text-red\": error,\n            \"text-text\": !error,\n          })}>\n          {caption}\n        </p>\n      )}\n    </div>\n  );\n});\n\nTextInput.displayName = \"TextInput\";\n","import { cn } from \"@shiperist-catppuccin-ui/utilities\";\n\nexport const textInputAppearance = {\n  outline: \"ring-0 border rounded-xl\",\n  underline: \"ring-0 border-b\",\n  filled: \"ring-0 border-b rounded-xl bg-surface0\",\n};\nexport const textInputSizeClass = {\n  small: \"text-xs h-7\",\n  medium: \"text-sm h-8\",\n  large: \"text-md h-9\",\n};\nexport const textInputIconSizeClass = {\n  small: \"w-4 h-4\",\n  medium: \"w-5 h-5\",\n  large: \"w-6 h-6\",\n  xlarge: \"h-7 w-7\",\n};\nexport const textInputContainerClass = \"relative flex flex-col transition\";\nexport const textInputOverlayClass = (\n  size: string,\n  disabled: boolean,\n  error: boolean,\n  isInputFocused: boolean,\n  appearance: string\n) =>\n  cn(\n    \"flex h-full w-full flex-row items-center px-4 transition-all duration-150 ease-in-out\",\n    textInputSizeClass[size] || textInputSizeClass.medium,\n    textInputAppearance[appearance] || textInputAppearance.outline,\n    {\n      \"cursor-not-allowed opacity-50\": disabled,\n      \"hover:border-overlay2 focus:border-overlay2\": !disabled && !isInputFocused && !error,\n      \"border-red\": error,\n      \"border-overlay0\": !error,\n      \"border-overlay2\": isInputFocused && !error,\n    }\n  );\nexport const textInputClass = (disabled: boolean, error: boolean) =>\n  cn(`mx-1 flex-grow bg-transparent outline-none`, {\n    \"cursor-not-allowed\": disabled,\n    \"text-red\": error,\n    \"text-text\": !error,\n  });\nexport const textInputLabelAppearanceBorderClass = (label: string, labelStyle: string) =>\n  label && labelStyle && cn(\"z-10 left-2 -top-3 bg-base absolute cursor-text px-2\");\n"],"names":["TextInput","React","props","ref","leadingElement","originalTrailingElement","appearance","labelStyle","errorIcon","required","size","type","placeholder","isLoading","disabled","error","caption","label","className","other","isInputFocused","setIsInputFocused","useState","isPasswordVisible","setIsPasswordVisible","inputType","setInputType","containerClass","cn","textInputContainerClass","overlayClass","textInputOverlayClass","textInputStyles","textInputClass","iconSizeClass","textInputIconSizeClass","borderedAppearanceStyle","textInputLabelAppearanceBorderClass","trailingElement","jsx","LoadingIcon","ErrorCircleIcon","VisiblePasswordIcon","handleInputFocus","handleInputBlur","handleEye","jsxs","HiddenPasswordIcon","textInputAppearance","textInputSizeClass"],"mappings":"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"}